---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: celery-coordinator
spec:
  replicas: {{ .Values.worker.replicas }}
  selector:
    matchLabels:
      app: celery-coordinator
  template:
    metadata:
      labels:
        app: celery-coordinator
      annotations:
{{- if .Values.istio.enabled }}
        "sidecar.istio.io/inject": "true"
{{- end }}
    spec:
      containers:
      - name: worker
        image: {{ .Values.worker.image.repository }}:{{ .Values.worker.image.tag }}
        imagePullPolicy: {{ .Values.global.imagePullPolicy }}
        # command: ["celery", "-A", "tasks", "worker", "--loglevel=info"]
        command: ["celery", "-A", "tasks", "worker", "-E", "--loglevel=info", "-Q", "celery"]
        env:
        - name: REDIS_URL
          value: redis://redis:{{ .Values.redis.port }}/0
        - name: EXTRACTOR_URL
          value: http://data-extractor-service:{{ .Values.dataExtractor.port }}/parse-invoice
        resources:
          requests:
            cpu: "200m"
            memory: "256Mi"
          limits:
            cpu: "300m"
            memory: "512Mi"


---

{{- if .Values.worker.hpa.enabled }}
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: celery-coordinator-service-hpa
  namespace: default
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: celery-coordinator
  minReplicas: 1
  maxReplicas: {{ .Values.worker.hpa.maxReplicas | default 5}}
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: {{ .Values.ocrService.hpa.cpuTarget | default 80 }} # Scale if CPU usage exceeds 80%
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: {{ .Values.ocrService.hpa.memoryTarget | default 80 }} # Scale if memory usage exceeds 80%
{{- if .Values.cilium.enabled }}
    - type: Object
      object:
        describedObject:
          apiVersion: apps/v1
          kind: Deployment
          name: celery-coordinator
        metric:
          name: hubble_flows_per_pod
        target:
          type: Value
          value: "5000m"  # Scale up if flows per pod exceed 5 (5000 milli). Coordinator works in conccurency level 8 so value c.a. 8 times greater than scaling the ocr-worker
{{- end }}
# It is impossible to scale based on numbers of requests as Istio doesnt support protocols different from HTTPS/gRPC
# {{- if .Values.istio.enabled }}
#     - type: Object
#       object:
#         describedObject:
#           apiVersion: apps/v1
#           kind: Deployment
#           name: backend
#         metric:
#           name: istio_requests_per_pod
#         target:
#           type: Value
#           value: "5000m"  # Scale up if flows per pod exceed 5 (5000 milli). Coordinator works in conccurency level 8 so value c.a. 8 times greater than scaling the ocr-worker
# {{- end }}
{{- end }}