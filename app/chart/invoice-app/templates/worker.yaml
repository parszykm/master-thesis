---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: celery-worker
spec:
  replicas: {{ .Values.worker.replicas }}
  selector:
    matchLabels:
      app: celery-worker
  template:
    metadata:
      labels:
        app: celery-worker
      annotations:
{{- if .Values.istio.enabled }}
        "sidecar.istio.io/inject": "true"
{{- end }}
    spec:
      containers:
      - name: worker
        image: {{ .Values.worker.image.repository }}:{{ .Values.worker.image.tag }}
        imagePullPolicy: {{ .Values.global.imagePullPolicy }}
        command: ["celery", "-A", "tasks", "worker", "--loglevel=info"]
        env:
        - name: REDIS_URL
          value: redis://redis:{{ .Values.redis.port }}/0
        - name: OCR_URL
          value: http://ocr-service-svc:{{ .Values.ocrService.port }}/ocr
        - name: EXTRACTOR_URL
          value: http://data-extractor-service:{{ .Values.dataExtractor.port }}/parse-invoice
        resources:
          requests:
            cpu: "200m"
            memory: "256Mi"
          limits:
            cpu: "300m"
            memory: "512Mi"


---

{{- if .Values.worker.hpa.enabled }}
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: celery-worker-service-hpa
  namespace: default
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: celery-worker
  minReplicas: 1
  maxReplicas: {{ .Values.worker.hpa.maxReplicas | default 5}}
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: {{ .Values.ocrService.hpa.cpuTarget | default 80 }} # Scale if CPU usage exceeds 80%
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: {{ .Values.ocrService.hpa.memoryTarget | default 80 }} # Scale if memory usage exceeds 80%
{{- if .Values.cilium.enabled }}
    - type: Object
      object:
        describedObject:
          apiVersion: apps/v1
          kind: Deployment
          name: celery-worker
        metric:
          name: hubble_flows_per_pod
        target:
          type: Value
          value: "150m"  # Scale up if flows per pod exceed 0.15 (150 milli)
    # - type: Object
    #   object:
    #     describedObject:
    #       apiVersion: apps/v1
    #       kind: Deployment
    #       name: backend
    #     metric:
    #       name: hubble_flows_per_pod
    #     target:
    #       type: Value
    #       value: "150m"  # Scale up if flows per pod exceed 0.15 (150 milli)
    - type: Object
      object:
        describedObject:
          apiVersion: apps/v1
          kind: Deployment
          name: backend
        metric:
          name: hubble_http_request_latency_p95
        target:
          type: Value
          value: "500m"  # Scale up if 95th percentile latency exceeds 500ms
{{- end }}
{{- if .Values.istio.enabled }}
    - type: Object
      object:
        describedObject:
          apiVersion: apps/v1
          kind: Deployment
          name: backend
        metric:
          name: istio_requests_per_pod
        target:
          type: Value
          value: "150m"  # Scale up if flows per pod exceed 0.15 (150 milli)
    - type: Object
      object:
        describedObject:
          apiVersion: apps/v1
          kind: Deployment
          name: backend
        metric:
          name: istio_request_latency_p95
        target:
          type: Value
          value: "500m"  # Scale up if 95th percentile latency exceeds 500ms
{{- end }}
{{- end }}